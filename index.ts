import * as dotenv from 'dotenv';
import {ethers} from "ethers";
import JsonRpcProvider = ethers.JsonRpcProvider;
import Wallet = ethers.Wallet;
import Contract = ethers.Contract;

dotenv.config();
const privateKey: string = process.env.PRIVATE_KEY ?? 'stub';
const goerliRpc = 'https://eth-goerli.public.blastapi.io';
const scrollRpc = 'https://alpha-rpc.scroll.io/l2';
const bridgeContractAddress = '0xe5E30E7c24e4dFcb281A682562E53154C15D3332';

const goerliProvider = new JsonRpcProvider(goerliRpc);
const goerliSigner = new Wallet(privateKey, goerliProvider);
const scrollProvider = new JsonRpcProvider(scrollRpc);
// The ERC-20 Contract ABI, which is a common contract interface
// for tokens (this is the Human-Readable ABI format)
const bridgeAbi = `
[
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"l1Token",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"l2Token",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"from",
            "type":"address"
         },
         {
            "indexed":false,
            "internalType":"address",
            "name":"to",
            "type":"address"
         },
         {
            "indexed":false,
            "internalType":"uint256",
            "name":"amount",
            "type":"uint256"
         },
         {
            "indexed":false,
            "internalType":"bytes",
            "name":"data",
            "type":"bytes"
         }
      ],
      "name":"DepositERC20",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"from",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"to",
            "type":"address"
         },
         {
            "indexed":false,
            "internalType":"uint256",
            "name":"amount",
            "type":"uint256"
         },
         {
            "indexed":false,
            "internalType":"bytes",
            "name":"data",
            "type":"bytes"
         }
      ],
      "name":"DepositETH",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"l1Token",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"l2Token",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"from",
            "type":"address"
         },
         {
            "indexed":false,
            "internalType":"address",
            "name":"to",
            "type":"address"
         },
         {
            "indexed":false,
            "internalType":"uint256",
            "name":"amount",
            "type":"uint256"
         },
         {
            "indexed":false,
            "internalType":"bytes",
            "name":"data",
            "type":"bytes"
         }
      ],
      "name":"FinalizeWithdrawERC20",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"from",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"to",
            "type":"address"
         },
         {
            "indexed":false,
            "internalType":"uint256",
            "name":"amount",
            "type":"uint256"
         },
         {
            "indexed":false,
            "internalType":"bytes",
            "name":"data",
            "type":"bytes"
         }
      ],
      "name":"FinalizeWithdrawETH",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"previousOwner",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"newOwner",
            "type":"address"
         }
      ],
      "name":"OwnershipTransferred",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"defaultERC20Gateway",
            "type":"address"
         }
      ],
      "name":"SetDefaultERC20Gateway",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"token",
            "type":"address"
         },
         {
            "indexed":true,
            "internalType":"address",
            "name":"gateway",
            "type":"address"
         }
      ],
      "name":"SetERC20Gateway",
      "type":"event"
   },
   {
      "anonymous":false,
      "inputs":[
         {
            "indexed":true,
            "internalType":"address",
            "name":"ethGateway",
            "type":"address"
         }
      ],
      "name":"SetETHGateway",
      "type":"event"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "name":"ERC20Gateway",
      "outputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "stateMutability":"view",
      "type":"function"
   },
   {
      "inputs":[
         
      ],
      "name":"defaultERC20Gateway",
      "outputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "stateMutability":"view",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_token",
            "type":"address"
         },
         {
            "internalType":"uint256",
            "name":"_amount",
            "type":"uint256"
         },
         {
            "internalType":"uint256",
            "name":"_gasLimit",
            "type":"uint256"
         }
      ],
      "name":"depositERC20",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_token",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"_to",
            "type":"address"
         },
         {
            "internalType":"uint256",
            "name":"_amount",
            "type":"uint256"
         },
         {
            "internalType":"uint256",
            "name":"_gasLimit",
            "type":"uint256"
         }
      ],
      "name":"depositERC20",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_token",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"_to",
            "type":"address"
         },
         {
            "internalType":"uint256",
            "name":"_amount",
            "type":"uint256"
         },
         {
            "internalType":"bytes",
            "name":"_data",
            "type":"bytes"
         },
         {
            "internalType":"uint256",
            "name":"_gasLimit",
            "type":"uint256"
         }
      ],
      "name":"depositERC20AndCall",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"uint256",
            "name":"_amount",
            "type":"uint256"
         },
         {
            "internalType":"uint256",
            "name":"_gasLimit",
            "type":"uint256"
         }
      ],
      "name":"depositETH",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_to",
            "type":"address"
         },
         {
            "internalType":"uint256",
            "name":"_amount",
            "type":"uint256"
         },
         {
            "internalType":"bytes",
            "name":"_data",
            "type":"bytes"
         },
         {
            "internalType":"uint256",
            "name":"_gasLimit",
            "type":"uint256"
         }
      ],
      "name":"depositETHAndCall",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         
      ],
      "name":"ethGateway",
      "outputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "stateMutability":"view",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         },
         {
            "internalType":"uint256",
            "name":"",
            "type":"uint256"
         },
         {
            "internalType":"bytes",
            "name":"",
            "type":"bytes"
         }
      ],
      "name":"finalizeWithdrawERC20",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         },
         {
            "internalType":"uint256",
            "name":"",
            "type":"uint256"
         },
         {
            "internalType":"bytes",
            "name":"",
            "type":"bytes"
         }
      ],
      "name":"finalizeWithdrawETH",
      "outputs":[
         
      ],
      "stateMutability":"payable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_token",
            "type":"address"
         }
      ],
      "name":"getERC20Gateway",
      "outputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "stateMutability":"view",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_l1Address",
            "type":"address"
         }
      ],
      "name":"getL2ERC20Address",
      "outputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "stateMutability":"view",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_ethGateway",
            "type":"address"
         },
         {
            "internalType":"address",
            "name":"_defaultERC20Gateway",
            "type":"address"
         }
      ],
      "name":"initialize",
      "outputs":[
         
      ],
      "stateMutability":"nonpayable",
      "type":"function"
   },
   {
      "inputs":[
         
      ],
      "name":"owner",
      "outputs":[
         {
            "internalType":"address",
            "name":"",
            "type":"address"
         }
      ],
      "stateMutability":"view",
      "type":"function"
   },
   {
      "inputs":[
         
      ],
      "name":"renounceOwnership",
      "outputs":[
         
      ],
      "stateMutability":"nonpayable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_defaultERC20Gateway",
            "type":"address"
         }
      ],
      "name":"setDefaultERC20Gateway",
      "outputs":[
         
      ],
      "stateMutability":"nonpayable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address[]",
            "name":"_tokens",
            "type":"address[]"
         },
         {
            "internalType":"address[]",
            "name":"_gateways",
            "type":"address[]"
         }
      ],
      "name":"setERC20Gateway",
      "outputs":[
         
      ],
      "stateMutability":"nonpayable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"_ethGateway",
            "type":"address"
         }
      ],
      "name":"setETHGateway",
      "outputs":[
         
      ],
      "stateMutability":"nonpayable",
      "type":"function"
   },
   {
      "inputs":[
         {
            "internalType":"address",
            "name":"newOwner",
            "type":"address"
         }
      ],
      "name":"transferOwnership",
      "outputs":[
         
      ],
      "stateMutability":"nonpayable",
      "type":"function"
   }
]
`;

//TODO hardhat-ether getContractAt WITHOUT ABI https://hardhat.org/hardhat-runner/plugins/nomiclabs-hardhat-ethers#helpers
const goerliBridgeContract = new Contract(bridgeContractAddress, bridgeAbi, goerliSigner);

async function test() {
    const blockNumber = await scrollProvider.getBlockNumber();
    console.info(blockNumber);
}

async function estimateGas(provider: JsonRpcProvider) {
    const block = await provider.getBlock('latest');
    console.info(block);
}

async function bridgeGoerliToScroll() {
    const test = 123;
    // const gas = estimateGas(goerliProvider);
    const result = await goerliBridgeContract.depositETH(100000, 40000, {gasLimit: 40000, value: 1000000});
    console.info(result);
}

test();
// estimateGas(goerliProvider);
bridgeGoerliToScroll();

